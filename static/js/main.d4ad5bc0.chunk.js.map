{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Credits.js","components/Debits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","this","props","accountBalance","Component","Home","src","alt","to","UserProfile","userName","memberSince","LogIn","handleChange","e","updatedUser","state","user","inputField","target","name","inputValue","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","onSubmit","htmlFor","type","onChange","Credits","creditData","useState","totalCredit","setTotalCredit","description","setDescription","creditAmount","setCreditAmount","isFirstRender","useRef","useEffect","current","isArray","map","credit","amount","moment","date","format","id","creditsView","newObj","uuidv1","Math","round","Number","EPSILON","Date","push","required","placeholder","event","Debits","debitData","totalDebit","setTotalDebit","debitAmount","setDebitAmount","debit","debitsView","App","logInInfo","newUser","currentUser","sendCredit","newCredit","length","item","prevState","toFixed","sendDebit","newDebit","a","linkToDebitData","axios","get","responseForCredit","responseForDebit","console","log","i","data","status","basename","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"oSAIMA,E,4JAEJ,WACE,OACE,4CACYC,KAAKC,MAAMC,sB,GALAC,aAWdJ,ICRTK,E,4JACJ,WACE,OACE,gCACE,qBAAKC,IAAI,gCAAgCC,IAAI,SAE7C,+CAEA,cAAC,IAAD,CAAMC,GAAG,eAAT,0BACA,uBACA,cAAC,IAAD,CAAMA,GAAG,SAAT,mBACA,uBACA,cAAC,IAAD,CAAMA,GAAG,WAAT,2DACA,uBACA,cAAC,IAAD,CAAMA,GAAG,UAAT,0DACA,uBAAK,uBACL,cAAC,EAAD,CAAgBL,eAAgBF,KAAKC,MAAMC,wB,GAhBhCC,aAsBJC,ICvBTI,E,4JACJ,WACE,OACE,gCACE,8CAEA,6CAAgBR,KAAKC,MAAMQ,YAC3B,iDAAoBT,KAAKC,MAAMS,eAC/B,uBACA,cAAC,IAAD,CAAMH,GAAG,IAAT,mC,GATkBJ,aAeXK,ICyCAG,E,kDAvDb,aAAgB,IAAD,8BACb,gBAWFC,aAAe,SAACC,GACd,IAAMC,EAAW,eAAO,EAAKC,MAAMC,MAC7BC,EAAaJ,EAAEK,OAAOC,KACtBC,EAAaP,EAAEK,OAAOG,MAC5BP,EAAYG,GAAcG,EAE1B,EAAKE,SAAS,CAACN,KAAMF,KAlBR,EAsBfS,aAAe,SAACV,GACdA,EAAEW,iBACF,EAAKvB,MAAMwB,UAAU,EAAKV,MAAMC,MAChC,EAAKM,SAAS,CAACI,UAAU,KAvBzB,EAAKX,MAAQ,CACXC,KAAM,CACJP,SAAU,GACVkB,SAAU,IAEZD,UAAU,GAPC,E,0CA4Bf,WAEE,OAAI1B,KAAKe,MAAMW,SACL,cAAC,IAAD,CAAUnB,GAAG,iBAKrB,gCACE,uCAEA,uBAAMqB,SAAU5B,KAAKuB,aAArB,UACE,gCACE,uBAAOM,QAAQ,WAAf,uBACA,uBAAOC,KAAK,OAAOX,KAAK,WAAWY,SAAU/B,KAAKY,aAAcS,MAAOrB,KAAKe,MAAMC,KAAKP,cAEzF,gCACE,uBAAOoB,QAAQ,WAAf,sBACA,uBAAOC,KAAK,WAAWX,KAAK,gBAE9B,sD,GAjDUhB,a,iDC8FL6B,EA5FC,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,WAAY/B,EAA+B,EAA/BA,eAAgBoB,EAAe,EAAfA,SAC3C,EAAsCY,mBAAS,YAAID,IAAnD,mBAAOE,EAAP,KAAoBC,EAApB,KACA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAwCJ,mBAAS,IAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KAsCMC,EAAgBC,kBAAO,GAU7B,OARAC,qBAAU,WAEFF,EAAcG,QACdH,EAAcG,SAAU,EAG5BtB,EAASa,KACV,CAACA,EAAab,IAEb,gCACI,yCAhDU,WACd,GAAIuB,kBAAQV,GACR,OAAOA,EAAYW,KAAI,SAACC,GAEpB,OACI,+BACK,IACAA,EAAOC,OAFZ,IAEqBD,EAAOV,YAAa,IACpCY,IAAOF,EAAOG,MAAMC,OAAO,gBAHvBJ,EAAOK,OA4CvBC,GAED,uBAAMzB,SAjCK,SAACf,GAChBA,EAAEW,iBACF,IAAM8B,EAAS,CACXF,GAAIG,cACJlB,YAAaA,EACbW,OAAQQ,KAAKC,MAAiD,KAAzCC,OAAOnB,GAAgBmB,OAAOC,UAAmB,IACtET,KAAMD,IAAO,IAAIW,MAAQT,OAAO,eAEpCf,EAAe,GAAD,mBAAKD,GAAL,CAAkBmB,KAIhCrB,EAAW4B,KAAKP,GAGhBhB,EAAe,IACfE,EAAgB,KAiBZ,UACI,+CAEI,uBACIsB,SAAS,WACThC,KAAK,cACLX,KAAK,cACL4C,YAAY,sBACZ1C,MAAOgB,EACPN,SAAU,SAACiC,GAAD,OAAW1B,EAAe0B,EAAM9C,OAAOG,aAIzD,0CAEI,uBACIyC,SAAS,WACThC,KAAK,SACLX,KAAK,UACLE,MAAOkB,EACPR,SAAU,SAAClB,GAAD,OAAO2B,EAAgB3B,EAAEK,OAAOG,aAIlD,mDAGJ,8BACI,cAAC,IAAD,CAAMd,GAAG,IAAT,8BAGJ,cAAC,EAAD,CAAgBL,eAAgBA,QCM7B+D,EA7FA,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,UAAWhE,EAA+B,EAA/BA,eAAgBoB,EAAe,EAAfA,SAEzC,EAAoCY,mBAAS,YAAIgC,IAAjD,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAsClC,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAsCJ,mBAAS,IAA/C,mBAAOmC,EAAP,KAAoBC,EAApB,KAmCM7B,EAAgBC,kBAAO,GAY7B,OAVAC,qBAAU,WAEFF,EAAcG,QACdH,EAAcG,SAAU,EAG5BtB,EAAS6C,KACV,CAACA,EAAY7C,IAIZ,gCACI,wCA/CS,WACb,GAAIuB,kBAAQsB,GACR,OAAOA,EAAWrB,KAAI,SAACyB,GACnB,OACI,+BACK,IACAA,EAAMvB,OAFX,IAEoBuB,EAAMlC,YAAa,IAClCY,IAAOsB,EAAMrB,MAAMC,OAAO,gBAHtBoB,EAAMnB,OA4CtBoB,GAED,uBAAM5C,SAlCK,SAACf,GAChBA,EAAEW,iBACF,IAAM8B,EAAS,CACXF,GAAIG,cACJlB,YAAaA,EACbW,OAAQQ,KAAKC,MAAgD,KAAxCC,OAAOW,GAAeX,OAAOC,UAAmB,IACrET,KAAMD,IAAO,IAAIW,MAAQT,OAAO,eAEpCiB,EAAc,GAAD,mBAAKD,GAAL,CAAiBb,KAG9BY,EAAUL,KAAKP,GAEfhB,EAAe,IACfgC,EAAe,KAoBX,UACI,+CAEI,uBACIxC,KAAK,cACLX,KAAK,cACL2C,SAAS,WACTC,YAAY,sBACZ1C,MAAOgB,EACPN,SAAU,SAACiC,GAAD,OAAW1B,EAAe0B,EAAM9C,OAAOG,aAIzD,yCAEI,uBACIyC,SAAS,WACThC,KAAK,SACLX,KAAK,SACLE,MAAOgD,EACPtC,SAAU,SAAClB,GAAD,OAAOyD,EAAezD,EAAEK,OAAOG,aAIjD,kDAIJ,8BACI,cAAC,IAAD,CAAMd,GAAG,IAAT,8BAGJ,cAAC,EAAD,CAAgBL,eAAgBA,QCnFtCuE,E,kDACF,aAAe,IAAD,8BAEV,gBAeJhD,UAAY,SAACiD,GACT,IAAMC,EAAO,eAAQ,EAAK5D,MAAM6D,aAChCD,EAAQlE,SAAWiE,EAAUjE,SAC7B,EAAKa,SAAS,CAAEsD,YAAaD,KApBnB,EAuBdE,WAAa,SAACC,GAEV,GAAIA,GAAaA,EAAUC,OAAS,EAAG,CACnC,IAAIC,EAAOF,EAAUA,EAAUC,OAAS,GAExC,EAAKzD,UAAS,SAAC2D,GAEX,MAAO,CACHA,YACA/E,gBAAiBwD,OACbuB,EAAU/E,gBAAkBwD,OAAOsB,EAAKhC,SAC1CkC,QAAQ,SAlCZ,EAwCdC,UAAY,SAACC,GACT,GAAIA,GAAYA,EAASL,OAAS,EAAG,CACjC,IAAIC,EAAOI,EAASA,EAASL,OAAS,GAEtC,EAAKzD,UAAS,SAAC2D,GAEX,MAAO,CACHA,YACA/E,eAAgBwD,OACZuB,EAAU/E,eAAiBwD,OAAOsB,EAAKhC,SACzCkC,QAAQ,SA/CtB,EAAKnE,MAAQ,CACTb,eAAgB,WAChB0E,YAAa,CACTnE,SAAU,YACVC,YAAa,YAEjBuB,WAAY,GACZiC,UAAW,GACX3B,aAAc,EACd8B,YAAa,GAZP,E,4FAyDd,oCAAAgB,EAAA,4DAC2B,wCACnBC,EAAkB,uCAF1B,kBAKsCC,IAAMC,IAJjB,yCAD3B,cAKYC,EALZ,gBAMqCF,IAAMC,IAAIF,GAN/C,OAQQ,IAFII,EANZ,OAOQC,QAAQC,IAAIH,GACHI,EAAI,EAAGA,EAAIJ,EAAkBK,KAAKf,OAAQc,IAC/C7F,KAAKe,MAAMkB,WAAW4B,KAAK4B,EAAkBK,KAAKD,IAClD7F,KAAKe,MAAMwB,cAAgBkD,EAAkBK,KAAKD,GAAG7C,OAGzD,IADA2C,QAAQC,IAAIF,GACHG,EAAI,EAAGA,EAAIH,EAAiBI,KAAKf,OAAQc,IAC9C7F,KAAKe,MAAMmD,UAAUL,KAAK6B,EAAiBI,KAAKD,IAChD7F,KAAKe,MAAMsD,aAAeqB,EAAiBI,KAAKD,GAAG7C,OAEvDhD,KAAKsB,SAAS,CAACpB,gBAAiBF,KAAKe,MAAMwB,aAAevC,KAAKe,MAAMsD,aAAaa,QAAQ,KAjBlG,kDAoBY,KAAMO,oBACNE,QAAQC,IAAI,KAAMH,kBAAkBK,MACpCH,QAAQC,IAAI,KAAMH,kBAAkBM,SAEpC,KAAML,mBACNC,QAAQC,IAAI,KAAMF,iBAAiBI,MACnCH,QAAQC,IAAI,KAAMF,iBAAiBK,SA1B/C,0D,0EAgCA,WAAU,IAAD,OA+BL,OACI,cAAC,IAAD,CAAQC,SAAS,kBAAjB,SACI,gCACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAhCZ,kBAClB,cAAC,EAAD,CAAMjG,eAAgB,EAAKa,MAAMb,oBAgCzB,cAAC,IAAD,CACI+F,OAAK,EACLC,KAAK,eACLC,OAjCa,kBACzB,cAAC,EAAD,CACI1F,SAAU,EAAKM,MAAM6D,YAAYnE,SACjCC,YAAa,EAAKK,MAAM6D,YAAYlE,iBAgChC,cAAC,IAAD,CAAOuF,OAAK,EAACC,KAAK,SAASC,OA7BhB,kBACnB,cAAC,EAAD,CAAOnF,KAAM,EAAKD,MAAM6D,YAAanD,UAAW,EAAKA,eA6B7C,cAAC,IAAD,CAAOwE,OAAK,EAACC,KAAK,WAAWC,OA1BhB,kBACrB,cAAC,EAAD,CACIlE,WAAY,EAAKlB,MAAMkB,WACvB/B,eAAgB,EAAKa,MAAMb,eAC3BoB,SAAU,EAAKuD,gBAuBX,cAAC,IAAD,CAAOoB,OAAK,EAACC,KAAK,UAAUC,OAnBhB,kBACpB,cAAC,EAAD,CACIjC,UAAW,EAAKnD,MAAMmD,UACtBhE,eAAgB,EAAKa,MAAMb,eAC3BoB,SAAU,EAAK6D,wB,GArHbhF,aA2IHsE,IC5IA2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASV,OACP,cAAC,IAAMW,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d4ad5bc0.chunk.js","sourcesContent":["// src/components/AccountBalance.js\r\n\r\nimport React, {Component} from 'react';\r\n\r\nclass AccountBalance extends Component {\r\n  // Display account balance\r\n  render() {\r\n    return (\r\n      <div>\r\n        Balance: {this.props.accountBalance}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccountBalance;","// src/components/Home.js\r\n// The Home component is used to demonstrate the use of Link.\r\n\r\nimport React, {Component} from 'react';\r\nimport AccountBalance from './AccountBalance';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <img src=\"https://picsum.photos/200/200\" alt=\"bank\"/>\r\n\r\n        <h1>Bank of React</h1>\r\n\r\n        <Link to=\"/userProfile\">User Profile</Link>\r\n        <br/>\r\n        <Link to=\"/login\">Login</Link>\r\n        <br/>\r\n        <Link to=\"/credits\">Credits (to be implemented in the Assignment)</Link>\r\n        <br/>\r\n        <Link to=\"/debits\">Debits (to be implemented in the Assignment)</Link>\r\n        <br/><br/>\r\n        <AccountBalance accountBalance={this.props.accountBalance}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","// src/components/UserProfile.js\r\n// The UserProfile component is used to demonstrate the use of Route and Link.\r\n\r\nimport React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass UserProfile extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>User Profile</h1>\r\n\r\n        <div>Username: {this.props.userName}</div>\r\n        <div>Member Since: {this.props.memberSince}</div>\r\n        <br/>\r\n        <Link to=\"/\">Return to Home</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserProfile;","// src/components/Login.js\r\n// The LogIn component is used to demonstrate the use of Redirect.\r\n\r\nimport React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass LogIn extends Component {\r\n  constructor () {  // Create and initialize state\r\n    super()\r\n    this.state = {\r\n      user: {\r\n        userName: '',\r\n        password: ''\r\n      },\r\n      redirect: false\r\n    }\r\n  }\r\n\r\n  // When the user name input is changed, capture the input and update the state (user.userName)\r\n  handleChange = (e) => {\r\n    const updatedUser = {...this.state.user}\r\n    const inputField = e.target.name\r\n    const inputValue = e.target.value\r\n    updatedUser[inputField] = inputValue\r\n\r\n    this.setState({user: updatedUser})\r\n  }\r\n\r\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    this.props.mockLogIn(this.state.user)\r\n    this.setState({redirect: true})\r\n  }\r\n  \r\n  render () {\r\n    // Redirect to \"User Profile\" page when \"Log In\" button is clicked\r\n    if (this.state.redirect) {  \r\n      return (<Redirect to=\"/userProfile\"/>)\r\n    }\r\n\r\n    // Render the login form (and call \"handleSubmit\" method when \"Log In\" button is clicked to submit form)\r\n    return (\r\n      <div>\r\n        <h1>Login</h1>\r\n        \r\n        <form onSubmit={this.handleSubmit}>\r\n          <div>\r\n            <label htmlFor=\"userName\">User Name</label>\r\n            <input type=\"text\" name=\"userName\" onChange={this.handleChange} value={this.state.user.userName} />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" name=\"password\" />\r\n          </div>\r\n          <button>Log In</button>\r\n        </form>                  \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default LogIn","// src/components/Credits.js\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AccountBalance from \"./AccountBalance\";\r\nimport { v1 as uuidv1 } from \"uuid\";\r\nimport { isArray } from \"lodash\";\r\nimport moment from \"moment\";\r\n\r\nconst Credits = ({ creditData, accountBalance, setState }) => {\r\n    const [totalCredit, setTotalCredit] = useState([...creditData]);\r\n    const [description, setDescription] = useState(\"\");\r\n    const [creditAmount, setCreditAmount] = useState(\"\");\r\n\r\n    let creditsView = () => {\r\n        if (isArray(totalCredit)) {\r\n            return totalCredit.map((credit) => {\r\n                // console.log(credit);\r\n                return (\r\n                    <li key={credit.id}>\r\n                        {\" \"}\r\n                        {credit.amount} {credit.description}{\" \"}\r\n                        {moment(credit.date).format(\"YYYY-MM-DD\")}\r\n                    </li>\r\n                );\r\n                // console.log(credit);\r\n            });\r\n        }\r\n    };\r\n\r\n    //Once Add Credit clicked send description and creditAmount to\r\n    //Array.\r\n    let handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const newObj = {\r\n            id: uuidv1(),\r\n            description: description,\r\n            amount: Math.round(( Number(creditAmount) + Number.EPSILON) * 100 ) / 100,\r\n            date: moment(new Date()).format(\"YYYY-MM-DD\"),\r\n        };\r\n        setTotalCredit([...totalCredit, newObj]);\r\n        // setState(totalCredit);\r\n\r\n        // Add new credit to array\r\n        creditData.push(newObj);\r\n\r\n        // Clear input fields after submit\r\n        setDescription(\"\");\r\n        setCreditAmount(\"\");\r\n    };\r\n    const isFirstRender = useRef(true);\r\n\r\n    useEffect(() => {\r\n        // console.log({ totalDebit });\r\n        if (isFirstRender.current) {\r\n            isFirstRender.current = false;\r\n            return; // 👈️ return early if first render\r\n        }\r\n        setState(totalCredit);\r\n    }, [totalCredit, setState]);\r\n    return (\r\n        <div>\r\n            <h1>Credits</h1>\r\n            {creditsView()}\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    Description:\r\n                    <input\r\n                        required=\"required\"\r\n                        type=\"description\"\r\n                        name=\"description\"\r\n                        placeholder=\"Enter a description\"\r\n                        value={description}\r\n                        onChange={(event) => setDescription(event.target.value)}\r\n                    />\r\n                </div>\r\n\r\n                <div>\r\n                    Credit:\r\n                    <input\r\n                        required=\"required\"\r\n                        type=\"number\"\r\n                        name=\"credits\"\r\n                        value={creditAmount}\r\n                        onChange={(e) => setCreditAmount(e.target.value)}\r\n                    />\r\n                </div>\r\n\r\n                <button>Add credit</button>\r\n            </form>\r\n\r\n            <div>\r\n                <Link to=\"/\">Return to Home</Link>\r\n            </div>\r\n\r\n            <AccountBalance accountBalance={accountBalance} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Credits;\r\n","// src/components/Debits.js\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AccountBalance from \"./AccountBalance\";\r\nimport { v1 as uuidv1 } from \"uuid\";\r\nimport { isArray } from \"lodash\";\r\nimport moment from \"moment\";\r\n\r\nconst Debits = ({ debitData, accountBalance, setState }) => {\r\n    // Create the list of Debit items\r\n    const [totalDebit, setTotalDebit] = useState([...debitData]);\r\n    const [description, setDescription] = useState(\"\");\r\n    const [debitAmount, setDebitAmount] = useState(\"\");\r\n\r\n    let debitsView = () => {\r\n        if (isArray(totalDebit)) {\r\n            return totalDebit.map((debit) => {\r\n                return (\r\n                    <li key={debit.id}>\r\n                        {\" \"}\r\n                        {debit.amount} {debit.description}{\" \"}\r\n                        {moment(debit.date).format(\"YYYY-MM-DD\")}\r\n                    </li>\r\n                );\r\n            });\r\n        }\r\n    };\r\n\r\n    //Once Add Debit clicked send description and debitAmount to\r\n    //Array.\r\n    let handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const newObj = {\r\n            id: uuidv1(),\r\n            description: description,\r\n            amount: Math.round(( Number(debitAmount) + Number.EPSILON) * 100 ) / 100,\r\n            date: moment(new Date()).format(\"YYYY-MM-DD\"),\r\n        };\r\n        setTotalDebit([...totalDebit, newObj]);\r\n        // console.log({ debitAmount, description, totalDebit });\r\n\r\n        debitData.push(newObj);\r\n\r\n        setDescription(\"\");\r\n        setDebitAmount(\"\");\r\n    };\r\n\r\n    const isFirstRender = useRef(true);\r\n\r\n    useEffect(() => {\r\n        // console.log({ totalDebit });\r\n        if (isFirstRender.current) {\r\n            isFirstRender.current = false;\r\n            return; // 👈️ return early if first render\r\n        }\r\n        setState(totalDebit);\r\n    }, [totalDebit, setState]);\r\n\r\n    // Render the list of Debit items and a form to input new Debit item\r\n    return (\r\n        <div>\r\n            <h1>Debits</h1>\r\n            {debitsView()}\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    Description:\r\n                    <input\r\n                        type=\"description\"\r\n                        name=\"description\"\r\n                        required=\"required\"\r\n                        placeholder=\"Enter a description\"\r\n                        value={description}\r\n                        onChange={(event) => setDescription(event.target.value)}\r\n                    />\r\n                </div>\r\n\r\n                <div>\r\n                    Debit:\r\n                    <input\r\n                        required=\"required\"\r\n                        type=\"number\"\r\n                        name=\"debits\"\r\n                        value={debitAmount}\r\n                        onChange={(e) => setDebitAmount(e.target.value)}\r\n                    />\r\n                </div>\r\n\r\n                <button>Add debit</button>\r\n                {/* onClick={() => setState(totalDebit)} */}\r\n            </form>\r\n\r\n            <div>\r\n                <Link to=\"/\">Return to Home</Link>\r\n            </div>\r\n\r\n            <AccountBalance accountBalance={accountBalance} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Debits;\r\n","// src/App.js\r\n\r\nimport React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\n// Import other components\r\nimport Home from \"./components/Home\";\r\nimport UserProfile from \"./components/UserProfile\";\r\nimport LogIn from \"./components/Login\";\r\nimport Credits from \"./components/Credits\";\r\nimport Debits from \"./components/Debits\";\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        // Create and initialize state\r\n        super();\r\n        this.state = {\r\n            accountBalance: 1234567.89,\r\n            currentUser: {\r\n                userName: \"Joe Smith\",\r\n                memberSince: \"11/22/99\",\r\n            },\r\n            creditData: [],\r\n            debitData: [],\r\n            creditAmount: 0,\r\n            debitAmount: 0,\r\n        };\r\n    }\r\n\r\n    // Update state's currentUser (userName) after \"Log In\" button is clicked\r\n    mockLogIn = (logInInfo) => {\r\n        const newUser = { ...this.state.currentUser };\r\n        newUser.userName = logInInfo.userName;\r\n        this.setState({ currentUser: newUser });\r\n    };\r\n\r\n    sendCredit = (newCredit) => {\r\n        // this.setState({ ...this.state.creditData, newCredit });\r\n        if (newCredit && newCredit.length > 0) {\r\n            let item = newCredit[newCredit.length - 1];\r\n\r\n            this.setState((prevState) => {\r\n                // return {...prevState, accountBalance : Number(item.amount) + prevState.accountBalance}\r\n                return {\r\n                    prevState,\r\n                    accountBalance: (Number(\r\n                        prevState.accountBalance) + Number(item.amount)\r\n                    ).toFixed(2),\r\n                };\r\n            });\r\n        }\r\n    };\r\n\r\n    sendDebit = (newDebit) => {\r\n        if (newDebit && newDebit.length > 0) {\r\n            let item = newDebit[newDebit.length - 1];\r\n\r\n            this.setState((prevState) => {\r\n                // return {...prevState, accountBalance : Number(item.amount) + prevState.accountBalance}\r\n                return {\r\n                    prevState,\r\n                    accountBalance: Number(\r\n                        prevState.accountBalance - Number(item.amount)\r\n                    ).toFixed(2),\r\n                };\r\n            });\r\n        }\r\n    };\r\n\r\n    //Make API call to get credit data\r\n    async componentDidMount() {\r\n        let linkToCreditData = \"https://moj-api.herokuapp.com/credits\";\r\n        let linkToDebitData = \"https://moj-api.herokuapp.com/debits\";\r\n\r\n        try {\r\n            let responseForCredit = await axios.get(linkToCreditData);\r\n            let responseForDebit = await axios.get(linkToDebitData);\r\n            console.log(responseForCredit);\r\n            for (let i = 0; i < responseForCredit.data.length; i++) {\r\n                this.state.creditData.push(responseForCredit.data[i]);\r\n                this.state.creditAmount += responseForCredit.data[i].amount;\r\n            }\r\n            console.log(responseForDebit);\r\n            for (let i = 0; i < responseForDebit.data.length; i++) {\r\n                this.state.debitData.push(responseForDebit.data[i]);\r\n                this.state.debitAmount += responseForDebit.data[i].amount;\r\n            }\r\n            this.setState({accountBalance: (this.state.creditAmount - this.state.debitAmount).toFixed(2)});\r\n\r\n        } catch (error) {\r\n            if (error.responseForCredit) {\r\n                console.log(error.responseForCredit.data);\r\n                console.log(error.responseForCredit.status);\r\n            }\r\n            if (error.responseForDebit) {\r\n                console.log(error.responseForDebit.data);\r\n                console.log(error.responseForDebit.status);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Create Routes and React elements to be rendered using React components\r\n    render() {\r\n        // Create React elements\r\n        const HomeComponent = () => (\r\n            <Home accountBalance={this.state.accountBalance} />\r\n        );\r\n        const UserProfileComponent = () => (\r\n            <UserProfile\r\n                userName={this.state.currentUser.userName}\r\n                memberSince={this.state.currentUser.memberSince}\r\n            />\r\n        );\r\n        const LogInComponent = () => (\r\n            <LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />\r\n        ); // Pass props to \"LogIn\" component\r\n\r\n        const CreditsComponent = () => (\r\n            <Credits\r\n                creditData={this.state.creditData}\r\n                accountBalance={this.state.accountBalance}\r\n                setState={this.sendCredit}\r\n            />\r\n        );\r\n\r\n        const DebitsComponent = () => (\r\n            <Debits\r\n                debitData={this.state.debitData}\r\n                accountBalance={this.state.accountBalance}\r\n                setState={this.sendDebit}\r\n            />\r\n        );\r\n        // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\r\n        return (\r\n            <Router basename=\"/BANK-OF-REACT/\">\r\n                <div>\r\n                    <Route exact path=\"/\" render={HomeComponent} />\r\n                    <Route\r\n                        exact\r\n                        path=\"/userProfile\"\r\n                        render={UserProfileComponent}\r\n                    />\r\n                    <Route exact path=\"/login\" render={LogInComponent} />\r\n                    <Route exact path=\"/credits\" render={CreditsComponent} />\r\n                    <Route exact path=\"/debits\" render={DebitsComponent} />\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}