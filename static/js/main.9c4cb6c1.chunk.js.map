{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Credits.js","components/Debits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","this","props","accountBalance","Component","Home","src","alt","to","UserProfile","userName","memberSince","LogIn","handleChange","e","updatedUser","state","user","inputField","target","name","inputValue","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","onSubmit","htmlFor","type","onChange","Credits","creditData","useState","totalCredit","setTotalCredit","description","setDescription","creditAmount","setCreditAmount","console","log","isArray","map","credit","amount","moment","date","format","id","creditsView","newObj","uuidv1","Date","event","Debits","debitData","debit","slice","addDebit","App","logInInfo","newUser","currentUser","sendCredit","newCredit","a","linkToDebitData","axios","get","responseForCredit","responseForDebit","i","data","length","push","status","basename","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c4cb6c1.chunk.js","sourcesContent":["// src/components/AccountBalance.js\r\n\r\nimport React, {Component} from 'react';\r\n\r\nclass AccountBalance extends Component {\r\n  // Display account balance\r\n  render() {\r\n    return (\r\n      <div>\r\n        Balance: {this.props.accountBalance}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccountBalance;","// src/components/Home.js\r\n// The Home component is used to demonstrate the use of Link.\r\n\r\nimport React, {Component} from 'react';\r\nimport AccountBalance from './AccountBalance';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <img src=\"https://picsum.photos/200/200\" alt=\"bank\"/>\r\n\r\n        <h1>Bank of React</h1>\r\n\r\n        <Link to=\"/userProfile\">User Profile</Link>\r\n        <br/>\r\n        <Link to=\"/login\">Login</Link>\r\n        <br/>\r\n        <Link to=\"/credits\">Credits (to be implemented in the Assignment)</Link>\r\n        <br/>\r\n        <Link to=\"/debits\">Debits (to be implemented in the Assignment)</Link>\r\n        <br/><br/>\r\n        <AccountBalance accountBalance={this.props.accountBalance}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","// src/components/UserProfile.js\r\n// The UserProfile component is used to demonstrate the use of Route and Link.\r\n\r\nimport React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass UserProfile extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>User Profile</h1>\r\n\r\n        <div>Username: {this.props.userName}</div>\r\n        <div>Member Since: {this.props.memberSince}</div>\r\n        <br/>\r\n        <Link to=\"/\">Return to Home</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserProfile;","// src/components/Login.js\r\n// The LogIn component is used to demonstrate the use of Redirect.\r\n\r\nimport React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass LogIn extends Component {\r\n  constructor () {  // Create and initialize state\r\n    super()\r\n    this.state = {\r\n      user: {\r\n        userName: '',\r\n        password: ''\r\n      },\r\n      redirect: false\r\n    }\r\n  }\r\n\r\n  // When the user name input is changed, capture the input and update the state (user.userName)\r\n  handleChange = (e) => {\r\n    const updatedUser = {...this.state.user}\r\n    const inputField = e.target.name\r\n    const inputValue = e.target.value\r\n    updatedUser[inputField] = inputValue\r\n\r\n    this.setState({user: updatedUser})\r\n  }\r\n\r\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    this.props.mockLogIn(this.state.user)\r\n    this.setState({redirect: true})\r\n  }\r\n  \r\n  render () {\r\n    // Redirect to \"User Profile\" page when \"Log In\" button is clicked\r\n    if (this.state.redirect) {  \r\n      return (<Redirect to=\"/userProfile\"/>)\r\n    }\r\n\r\n    // Render the login form (and call \"handleSubmit\" method when \"Log In\" button is clicked to submit form)\r\n    return (\r\n      <div>\r\n        <h1>Login</h1>\r\n        \r\n        <form onSubmit={this.handleSubmit}>\r\n          <div>\r\n            <label htmlFor=\"userName\">User Name</label>\r\n            <input type=\"text\" name=\"userName\" onChange={this.handleChange} value={this.state.user.userName} />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" name=\"password\" />\r\n          </div>\r\n          <button>Log In</button>\r\n        </form>                  \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default LogIn","// src/components/Credits.js\r\nimport React, { useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport AccountBalance from './AccountBalance';\r\nimport { v1 as uuidv1 } from 'uuid';\r\nimport { isArray } from 'lodash';\r\nimport moment from 'moment';\r\n\r\n\r\nconst Credits = ({creditData, accountBalance, setState}) => {\r\n  const [totalCredit, setTotalCredit] = useState([...creditData]);\r\n  const [description, setDescription] = useState('');\r\n  const [creditAmount, setCreditAmount] = useState(0);\r\n\tconsole.log(\"totalCredit\", totalCredit)\r\n  let creditsView = () => {\r\n    if (isArray(totalCredit)) {\r\n      return totalCredit.map((credit) => {\r\n        // console.log(credit);\r\n        return <li key={credit.id}> {credit.amount} {credit.description} {moment(credit.date).format('YYYY-MM-DD')}</li>\r\n        // console.log(credit);\r\n      }) \r\n    }\r\n  }\r\n\r\n  // let showBalance = () =>{\r\n  \r\n  //  // console.log(props.creditData);\r\n  //  const credits = creditData;\r\n  //  let total = 0;\r\n  //  return credits.map((credit) => {\r\n  //   total = total + credit.amount;\r\n  //   return <div> {total}</div>\r\n  //  }) \r\n\r\n  // }\r\n\r\n  //Once Add Credit clicked send description and creditAmount to \r\n  //Array. \r\n  let handleSubmit = (e) =>{\r\n    e.preventDefault();\r\n    const newObj = {\r\n      id: uuidv1(),\r\n      description: description,\r\n      amount: creditAmount,\r\n      date: moment(new Date()).format('YYYY-MM-DD'),\r\n    }\r\n    setTotalCredit([...totalCredit, newObj])\r\n    setState(totalCredit);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Credits</h1>\r\n      {creditsView()}\r\n\r\n      <form onSubmit={handleSubmit} >\r\n      <div>Description:\r\n      <input type=\"description\" name=\"description\" value={description} onChange={(event) =>setDescription(event.target.value)} />\r\n      </div>\r\n\r\n      <div>Credit:\r\n      <input type=\"credits\" name=\"credits\"\r\n        value={creditAmount}     \r\n        onChange={(e) => setCreditAmount(e.target.value)}\r\n      />\r\n      </div>\r\n\r\n      <button>Add credit</button>\r\n      </form>\r\n\r\n    <div>      \r\n    <Link to=\"/\">Return to Home</Link>\r\n    </div>\r\n\r\n    <AccountBalance accountBalance={accountBalance}/>\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Credits;","// src/components/Debits.js\r\nimport React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport AccountBalance from './AccountBalance';\r\n\r\nconst Debits = (props) => {\r\n  // Create the list of Debit items\r\n\tlet debitsView = () => {\r\n    const debits = props.debitData;\r\n    return debits.map((debit) => {\r\n      let date = debit.date.slice(0,10);\r\n      return <li key={debit.id}>{debit.amount} {debit.description} {date}</li>\r\n    }) \r\n  }\r\n  // Render the list of Debit items and a form to input new Debit item\r\n  return (\r\n    <div>\r\n      <h1>Debits</h1>\r\n\r\n      {debitsView()}\r\n\r\n      <form onSubmit={props.addDebit}>\r\n        <input type=\"text\" name=\"description\" />\r\n        <input type=\"number\" name=\"amount\" />\r\n        <button type=\"submit\">Add Debit</button>\r\n      </form>\r\n      <br></br>\r\n      <div>      \r\n        <Link to=\"/\">Return to Home</Link>\r\n      </div>\r\n      <br></br>\r\n      <AccountBalance accountBalance={props.accountBalance} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Debits;","// src/App.js\r\n\r\nimport React, {Component} from 'react';\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n// Import other components\r\nimport Home from './components/Home';\r\nimport UserProfile from './components/UserProfile';\r\nimport LogIn from './components/Login';\r\nimport Credits from './components/Credits';\r\nimport Debits from './components/Debits';\r\n\r\nclass App extends Component {\r\n  constructor() {  // Create and initialize state\r\n    super(); \r\n    this.state = {\r\n      accountBalance: 1234567.89,\r\n      currentUser: {\r\n        userName: 'Joe Smith',\r\n        memberSince: '11/22/99',\r\n      },\r\n      creditData: [],\r\n      debitData: []\r\n    }\r\n  }\r\n\r\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\r\n  mockLogIn = (logInInfo) => {  \r\n    const newUser = {...this.state.currentUser}\r\n    newUser.userName = logInInfo.userName\r\n    this.setState({currentUser: newUser})\r\n  }\r\n\r\n  sendCredit = (newCredit)=> {\r\n  \r\n    this.setState({...this.state.creditData, newCredit})\r\n\r\n  }\r\n\r\n  //Make API call to get credit data\r\n  async  componentDidMount() {\r\n    let linkToCreditData = 'https://moj-api.herokuapp.com/credits';\r\n    let linkToDebitData = 'https://moj-api.herokuapp.com/debits';\r\n\r\n    try {\r\n      let responseForCredit = await axios.get(linkToCreditData);\r\n      let responseForDebit = await axios.get(linkToDebitData);\r\n      console.log(responseForCredit);\r\n      for (let i = 0; i < responseForCredit.data.length; i++) {\r\n        this.state.creditData.push(responseForCredit.data[i]);\r\n      }\r\n      console.log(responseForDebit);\r\n      for (let i = 0; i < responseForDebit.data.length; i++) {\r\n        this.state.debitData.push(responseForDebit.data[i]);\r\n      }\r\n    } catch (error) {\r\n      if (error.responseForCredit) {\r\n        console.log(error.responseForCredit.data);\r\n        console.log(error.responseForCredit.status);\r\n      }\r\n      if (error.responseForDebit) {\r\n        console.log(error.responseForDebit.data);\r\n        console.log(error.responseForDebit.status);\r\n      } \r\n    }\r\n  }\r\n\r\n  // Create Routes and React elements to be rendered using React components\r\n  render() {  \r\n    // Create React elements\r\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance}/>);\r\n    const UserProfileComponent = () => (\r\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince}  />\r\n    );\r\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />);  // Pass props to \"LogIn\" component\r\n    \r\n    const CreditsComponent= () => (<Credits creditData={this.state.creditData}\r\n       accountBalance={this.state.accountBalance} \r\n       setState={this.sendCredit}/>);\r\n\r\n    const DebitsComponent= () => (<Debits debitData={this.state.debitData} accountBalance={this.state.accountBalance}/>);\r\n\r\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\r\n    return (\r\n      <Router basename=\"/bank-of-react-example-code-gh-pages\">\r\n        <div>\r\n          <Route exact path=\"/\" render={HomeComponent}/>\r\n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\r\n          <Route exact path=\"/login\" render={LogInComponent}/>\r\n          <Route exact path=\"/credits\" render={CreditsComponent}/>\r\n          <Route exact path=\"/debits\" render={DebitsComponent}/>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}